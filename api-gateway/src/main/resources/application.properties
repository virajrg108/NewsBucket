spring.application.name=api-gateway
server.port=8080

# Logging
logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.reactor.netty=DEBUG
logging.level.com.newsbucket.gateway=INFO

# CORS Configuration
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedOrigins=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedHeaders=*

# Actuator endpoints
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.endpoint.metrics.enabled=true
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true
management.metrics.tags.application=${spring.application.name}

# Resilience4j Circuit Breaker Configuration
resilience4j.circuitbreaker.instances.newsCircuitBreaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.newsCircuitBreaker.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.newsCircuitBreaker.waitDurationInOpenState=30s
resilience4j.circuitbreaker.instances.clientCircuitBreaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.clientCircuitBreaker.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.clientCircuitBreaker.waitDurationInOpenState=3s

# Rate Limiter Configuration
resilience4j.ratelimiter.instances.defaultRateLimiter.limitForPeriod=10
resilience4j.ratelimiter.instances.defaultRateLimiter.limitRefreshPeriod=1s
resilience4j.ratelimiter.instances.defaultRateLimiter.timeoutDuration=500ms

# Request Timeout
spring.cloud.gateway.httpclient.connect-timeout=2000
spring.cloud.gateway.httpclient.response-timeout=5s

# Gateway Metrics
spring.cloud.gateway.metrics.enabled=true

# Redis Configuration
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.timeout=2000

# Embedded Redis for development (disable in production)
spring.redis.embedded=true
spring.redis.embedded.port=6379